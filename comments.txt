Calculating Available Moves
  Time complexity: nested for loop O(n^2), check moves fn is O(1). Therefore total is O(n^2)
  Space complexity: O(1) Only storing x, y, moves_0 and moves_@, all just numbers.

Eliminating Enemy Pieces
Using iterative deepening depth limited search. 
The branching factor for the search tree is 3.
Max search depth: 16, one corner of board to the other
Doesnâ€™t return shortest possible sequence of moves